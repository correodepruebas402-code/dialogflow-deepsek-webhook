'use strict';

const express = require('express');
const axios = require('axios');
const { WebhookClient } = require('dialogflow-fulfillment');

require('dotenv').config();

const app = express();
app.use(express.json());

const deepseekApiKey = process.env.DEEPSEEK_API_KEY;

// üöÄ ENDPOINTS DE VERIFICACI√ìN
app.get('/', (req, res) => {
    res.json({ 
        status: 'AmericanStor Webhook Active - OPTIMIZADO', 
        timestamp: new Date().toISOString()
    });
});

app.get('/health', (req, res) => {
    res.json({ 
        status: 'healthy', 
        service: 'AmericanStor Webhook FAST',
        deepseek: deepseekApiKey ? 'configured' : 'missing'
    });
});

// ‚ö° FUNCI√ìN R√ÅPIDA PARA DEEPSEEK (M√ÅXIMO 3 SEGUNDOS)
async function mejorarRespuestaRapido(respuestaOriginal, query) {
    if (!deepseekApiKey) {
        return respuestaOriginal || 'Gracias por tu consulta sobre AmericanStor. ¬øEn qu√© m√°s puedo ayudarte? üòä';
    }

    try {
        const prompt = `Responde como asistente de AmericanStor (tienda de ropa y perfumes).
Consulta: "${query}"
Info disponible: "${respuestaOriginal || 'productos disponibles'}"

Respuesta corta (m√°ximo 80 palabras), amigable con emojis:`;

        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 segundos m√°ximo

        const response = await axios.post('https://api.deepseek.com/chat/completions', {
            model: "deepseek-chat",
            messages: [{ role: "user", content: prompt }],
            max_tokens: 100,
            temperature: 0.3
        }, {
            headers: {
                'Authorization': `Bearer ${deepseekApiKey}`,
                'Content-Type': 'application/json'
            },
            timeout: 3000,
            signal: controller.signal
        });

        clearTimeout(timeoutId);
        return response.data.choices[0].message.content.trim();

    } catch (error) {
        console.log('‚ö° Deepseek timeout/error, usando respuesta r√°pida');
        // RESPUESTA DE EMERGENCIA R√ÅPIDA
        return generarRespuestaRapida(query, respuestaOriginal);
    }
}

// üéØ RESPUESTAS R√ÅPIDAS SIN API (BACKUP)
function generarRespuestaRapida(query, info) {
    const keywords = query.toLowerCase();
    
    if (keywords.includes('perfume') || keywords.includes('fragancia')) {
        return info || '¬°Hola! üòä Tenemos una gran variedad de perfumes y fragancias. ¬øBuscas algo espec√≠fico para hombre o mujer? üéØ';
    }
    
    if (keywords.includes('ropa') || keywords.includes('camiseta') || keywords.includes('pantal√≥n')) {
        return info || '¬°Perfecto! üëï Manejamos ropa de calidad en diferentes tallas. ¬øQu√© tipo de prenda te interesa? üòä';
    }
    
    if (keywords.includes('talla') || keywords.includes('medida')) {
        return info || 'Manejamos tallas desde S hasta XXL. üìè ¬øNecesitas ayuda con alguna talla espec√≠fica? ¬°Te ayudamos! üòä';
    }
    
    if (keywords.includes('env√≠o') || keywords.includes('entrega')) {
        return info || 'Realizamos env√≠os a todo el pa√≠s. üöö Los tiempos y costos var√≠an seg√∫n la ubicaci√≥n. ¬øA qu√© ciudad enviar√≠as? üì¶';
    }
    
    // Respuesta general
    return info || '¬°Hola! üëã Soy tu asistente de AmericanStor. Tenemos ropa y perfumes de calidad. ¬øEn qu√© puedo ayudarte hoy? üòä';
}

// üéØ WEBHOOK PRINCIPAL - OPTIMIZADO PARA VELOCIDAD
app.post('/webhook', async (req, res) => {
    console.log('‚ö° REQUEST RECIBIDO - PROCESAMIENTO R√ÅPIDO');
    
    try {
        const agent = new WebhookClient({ request: req, response: res });
        console.log('üéØ Intent:', agent.intent, '| Query:', agent.query);

        // ‚ö° PROCESO ULTRA R√ÅPIDO
        const startTime = Date.now();
        
        // Intentar usar Knowledge Base del request si est√° disponible
        let respuestaBase = '';
        if (req.body.queryResult && req.body.queryResult.knowledgeAnswers) {
            const answers = req.body.queryResult.knowledgeAnswers.answers;
            if (answers && answers.length > 0) {
                respuestaBase = answers[0].answer;
                console.log('üìã KB encontrada en request');
            }
        }

        // Mejorar respuesta R√ÅPIDAMENTE
        const respuestaFinal = await mejorarRespuestaRapido(respuestaBase, agent.query);
        
        const processingTime = Date.now() - startTime;
        console.log('‚è±Ô∏è Tiempo procesamiento:', processingTime + 'ms');
        
        agent.add(respuestaFinal);
        
    } catch (error) {
        console.error('‚ùå Error en webhook:', error.message);
        
        // RESPUESTA DE EMERGENCIA S√öPER R√ÅPIDA
        const agent = new WebhookClient({ request: req, response: res });
        agent.add('¬°Hola! üòä Soy tu asistente de AmericanStor. ¬øEn qu√© puedo ayudarte con nuestros productos? üõçÔ∏è');
    }
    
    console.log('‚úÖ Respuesta enviada');
});

// üöÄ INICIAR SERVIDOR
const PORT = process.env.PORT || 10000;
app.listen(PORT, () => {
    console.log('‚ö° AmericanStor Webhook R√ÅPIDO iniciado en puerto:', PORT);
    console.log('üîó URL:', `https://dialogflow-deepseek-webhook.onrender.com/webhook`);
    console.log('‚úÖ Deepseek:', deepseekApiKey ? '‚úì Configurado' : '‚úó No configurado');
    console.log('‚è±Ô∏è Optimizado para respuestas < 4 segundos');
    console.log('////////////////////////////////////////////////');
});

// Error handling
process.on('unhandledRejection', (reason) => {
    console.log('‚ö†Ô∏è Promise rejection:', reason);
});

process.on('uncaughtException', (error) => {
    console.log('‚ö†Ô∏è Uncaught exception:', error.message);
});
